{"version":3,"sources":["const.js","reducers/swapiReducer.js","reducers/index.js","store.js","containers/components/Nav.js","api/swapi.js","actions/swapi.js","utils.js","components/loading/Loading.js","components/Pagination.js","containers/item-list/ItemList.js","containers/item-view/SubitemView.js","containers/item-view/ItemView.js","containers/home/Home.js","router.js","serviceWorker.js","index.js"],"names":["CATEGORY","SWAPI_REQUEST","SWAPI_RESPONSE","SWAPI_SET_SEARCH","initState","isFetching","didInvalidate","lastUpdate","searchStr","categoryReducerWrapper","category","state","action","arguments","length","undefined","type","Object","objectSpread","payload","Date","now","categoryReducer","swapiReducer","combineReducers","reduce","result","itm","defineProperty","rootReducer","swapiState","middlewares","thunkMiddleware","store","createStore","applyMiddleware","apply","withRouter","react_default","a","createElement","className","map","key","NavLink","activeClassName","to","concat","toUpperCase","slice","swapiApi","getList","_getList","asyncToGenerator","regenerator_default","mark","_callee","page","search","params","wrap","_context","prev","next","entries","filter","join","fetch","then","res","json","err","error","abrupt","sent","stop","this","_x","_x2","_x3","getItem","_getItem","_callee2","path","_context2","_x4","fetchItems","_ref","dispatch","getState","requestItems","responseItems","updateItemsIfNeeded","results","shouldFetchItems","response","pagination","objectWithoutProperties","Array","isArray","sort","b","title","name","searchItems","str","setSearch","utils","trottling","func","delay","callTimer","_len","_key","clearTimeout","setTimeout","Loading","dark","relative","getPages","total","pages","i","push","Pagination","loadPage","count","Math","ceil","aria-label","href","onClick","ItemList","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","match","value","target","trottledDispatch","_this$props","searchRef","React","createRef","prevProps","_this$props2","current","_this$props3","toLowerCase","_this$props4","url","Fragment","placeholder","onChange","ref","link","replace","Link","components_Pagination","components_loading_Loading","Component","connect","SubitemView","item","setState","_this$state","formatIfNeeded","data","test","item_view_SubitemView","ItemView","content","subitm","_ref2","_ref2$match$params","id","find","Home","categoryReg","components_Nav","Switch","Route","exact","component","Redirect","router","es","BrowserRouter","Boolean","window","location","hostname","ReactDOM","render","src_router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4760036.chunk.js","sourcesContent":["export const CATEGORY = ['films', 'people', 'planets', 'species', 'starships', 'vehicles'];\n\nexport const SWAPI_REQUEST = 'SWAPI_REQUEST';\nexport const SWAPI_RESPONSE = 'SWAPI_RESPONSE';\nexport const SWAPI_SET_SEARCH = 'SWAPI_SET_SEARCH';\n","import { combineReducers } from 'redux';\nimport { CATEGORY, SWAPI_REQUEST, SWAPI_RESPONSE, SWAPI_SET_SEARCH } from 'const';\n\nconst initState = {\n    isFetching: false,\n    didInvalidate: false,\n    lastUpdate: null,\n    searchStr: '',\n};\n\nconst categoryReducer = (state = initState, action, category) => {\n    switch (action.type + action.category) {\n        case SWAPI_REQUEST + category:\n            return {\n                ...state,\n                isFetching: true\n            };\n\n        case SWAPI_RESPONSE + category:\n            return {\n                ...state,\n                ...action.payload,\n                isFetching: false,\n                lastUpdate: Date.now(),\n                didInvalidate: false\n            };\n\n        case SWAPI_SET_SEARCH + category:\n            return {\n                ...state,\n                searchStr: action.payload,\n            };\n\n        default:\n            return state;\n    }\n};\n\nconst categoryReducerWrapper = category => {\n    return (state, action) => categoryReducer(state, action, category);\n};\n\nconst swapiReducer = combineReducers(CATEGORY.reduce((result, itm) => ({\n    ...result,\n    [itm]: categoryReducerWrapper(itm)\n}), {}));\n\nexport default swapiReducer","import { combineReducers } from 'redux';\nimport swapiState from './swapiReducer';\n\n\nconst rootReducer = combineReducers({\n    swapiState\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nlet middlewares = [thunkMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n    const { logger } = require('redux-logger');\n\n    middlewares.push(logger);\n}\n\nconst store = createStore(\n    rootReducer,\n    undefined, // Inital State\n    applyMiddleware(...middlewares)\n);\n\nexport default store;\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { CATEGORY } from 'const';\n\nconst Nav = () => {\n    return (\n        <ul className=\"nav nav-tabs\">\n            {CATEGORY.map(itm => <li className=\"nav-item\" key={itm}>\n                <NavLink\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    to={`/${itm}`}>\n                    {itm[0].toUpperCase() + itm.slice(1)}\n                </NavLink>\n            </li>)}\n        </ul>\n    );\n};\n\nexport default withRouter(Nav);","const API_SERVER = 'https://swapi.co/api/';\n\nconst swapiApi = {\n    async getList(category, page, search) {\n        const params = Object.entries({page, search})\n            .filter(itm => itm[1])\n            .map(itm => itm.join('='))\n            .join('&')\n        return await fetch(API_SERVER + category + '/?' + params)\n            .then(res => res.json(), err => ({error: err}));\n    },\n\n    async getItem (path) {\n        return await fetch(path).then(res => res.json());\n    }\n};\n\nexport default swapiApi;\n","import { SWAPI_REQUEST, SWAPI_RESPONSE, SWAPI_SET_SEARCH} from 'const';\nimport swapiApi from 'api/swapi';\n\nexport function fetchItems(category, page = 1) {\n    return async (dispatch, getState) => {\n        dispatch(requestItems(category));\n\n        const {searchStr, } = getState().swapiState[category];\n        const result = await swapiApi.getList(category, page, searchStr);\n\n        dispatch(responseItems(result, category, page))\n    };\n}\n\nfunction shouldFetchItems(state) {\n    const {isFetching, results, didInvalidate, lastUpdate} = state;\n    if (isFetching) {\n        return false;\n    } else if (!results) {\n        return true;\n    } else if (didInvalidate || lastUpdate < (Date.now() - 1000 * 60 * 10)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function updateItemsIfNeeded(category) {\n    return (dispatch, getState) => {\n        const { swapiState } = getState();\n        const categoryData = swapiState[category];\n\n        if (shouldFetchItems(categoryData)) {\n            dispatch(fetchItems(category));\n        }\n    };\n}\n\nfunction requestItems(category) {\n    return {\n        type: SWAPI_REQUEST,\n        category,\n    };\n}\n\nfunction responseItems(response, category, page) {\n    let {results, ...pagination} = response;\n    if (Array.isArray(results)) {\n        results = category === 'films'\n            ? results.sort((a, b) => a.title > b.title)\n            : results.sort((a, b) => a.name > b.name);\n    }\n    return {\n        type: SWAPI_RESPONSE,\n        category,\n        payload: {\n            pagination: {\n                ...pagination,\n                page,\n            },\n            results,\n        },\n    };\n}\n\nexport function searchItems(str, category) {\n    return dispatch => {\n        dispatch(setSearch(str, category));\n        dispatch(fetchItems(category));\n    };\n}\n\nfunction setSearch(str, category) {\n    return {\n        type: SWAPI_SET_SEARCH,\n        category,\n        payload: str\n    };\n}\n","const utils = {\n\n    trottling(func, delay = 1000) {\n        let callTimer = 0;\n\n        return function (...params) {\n            clearTimeout(callTimer);\n\n            callTimer = setTimeout(() => {\n                func(...params);\n            }, delay);\n        };\n    },\n};\n\nexport default utils;\n","import './Loading.css';\nimport React from 'react';\n\nconst Loading = ({ dark, relative }) => {\n    return (\n        <div className={'loading' + (dark ? ' m-dark' : '') + (relative ? ' m-relative' : '')}>\n            <div className=\"signal\"></div>\n        </div>\n    );\n};\n\nexport default Loading;\n","import React from 'react';\n\nconst Pagination = ({ pagination, loadPage}) => {\n    const {page, count} = pagination;\n    const total = Math.ceil(count / 10);\n    const pages = getPages(page, total);\n\n    return (\n        <nav aria-label=\"Page navigation example\">\n            <ul className=\"pagination\">\n                {page !== 1 && <li className=\"page-item\">\n                    <a className=\"page-link\" href=\"#\" onClick={() => loadPage(1)}>First</a>\n                </li>}\n                <li className={`page-item d-none d-md-block${page == 1 ? ' disabled' : ''}`}>\n                    <a className=\"page-link\" href=\"#\" onClick={() => loadPage(page - 1)}>Previous</a>\n                </li>\n\n                {pages[0] > 1 && <li className=\"page-item d-none d-md-block disabled\"><a className=\"page-link\" href=\"#\">...</a></li>}\n\n                {pages.map(itm => <li key={itm} className={`page-item${page === itm ? ' active' : ''}`}>\n                    <a className=\"page-link\" href=\"#\" onClick={() => loadPage(itm)}>{itm}</a>\n                </li>)}\n\n                {pages[pages.length - 1] < total && <li className=\"page-item d-none d-md-block disabled\"><a className=\"page-link\" href=\"#\">...</a></li>}\n\n                <li className={`page-item d-none d-md-block${page == total ? ' disabled' : ''}`}>\n                    <a className=\"page-link\" href=\"#\" onClick={() => loadPage(page + 1)}>Next</a>\n                </li>\n\n                {page != total && <li className=\"page-item\">\n                    <a className=\"page-link\" href=\"#\" onClick={() => loadPage(total)}>Last</a>\n                </li>}\n            </ul>\n        </nav>\n    );\n};\n\nconst getPages = (page, total) => {\n    const pages = [];\n    const delta = 10;\n\n    for (let i = 1; i <= total; i++) {\n        if (i <= page && i > page - delta || i >= page && i < page + delta) {\n            pages.push(i);\n        }\n    }\n\n    return pages;\n}\n\nexport default Pagination;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { updateItemsIfNeeded, searchItems, fetchItems } from '../../actions/swapi';\nimport utils from 'utils';\n\nimport Loading from '../../components/loading/Loading';\nimport Pagination from '../../components/Pagination';\n\nfunction mapStateToProps(state, props) {\n    const {match: {params: {category}}} = props;\n    return {\n        ...state.swapiState[category.toLowerCase()]\n    };\n}\n\nclass ItemList extends Component {\n    constructor(props) {\n        super(props);\n        this.trottledDispatch = utils.trottling(props.dispatch, 400);\n        this.searchRef = React.createRef();\n    }\n\n    setSearch = (e) => {\n        const { match: { params: { category } } } = this.props;\n        const value = e.target.value;\n        this.trottledDispatch(searchItems(value, category));\n    }\n\n    componentDidMount() {\n        this.updateItemsIfNeeded();\n    }\n\n    componentDidUpdate(prevProps) {\n        this.updateItemsIfNeeded();\n        const {match: {params: {category: prev}}} = prevProps\n        const {match: {params: {category: next}}, searchStr} = this.props;\n        if (prev !== next) {\n            this.searchRef.current.value = searchStr;\n        }\n    }\n\n    updateItemsIfNeeded() {\n        const {dispatch, match: {params: {category}}} = this.props;\n        dispatch(updateItemsIfNeeded(category.toLowerCase()));\n    }\n\n    loadPage = (page) => {\n        const { dispatch, match: { params: { category } } } = this.props;\n        dispatch(fetchItems(category, page));\n    }\n\n    render() {\n        const {isFetching, results, match: {url}, pagination} = this.props\n\n        return (\n            <>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Live search\"\n                    aria-label=\"\"\n                    onChange={this.setSearch}\n                    ref={this.searchRef} />\n\n                {!isFetching && results && <>\n                    <ul>\n                        {results.map(itm => {\n                            const link = itm.url.replace(/.*(\\/\\d+\\/)$/, '$1');\n                            const name = itm.name || itm.title;\n                            return <li key={itm.url}><Link to={url + link}>{name}</Link></li>;\n                        })}\n                    </ul>\n                    {results.length > 0 && <Pagination pagination={pagination} loadPage={this.loadPage} />}\n                </>}\n                {isFetching && <Loading/>}\n            </>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n)(ItemList);\n","import React, { Component } from 'react';\nimport swapiApi from '../../api/swapi';\nimport Loading from '../../components/loading/Loading';\n\nclass SubitemView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isFetching: true\n        };\n    }\n\n    async componentDidMount() {\n        const item = await swapiApi.getItem(this.props.path);\n        if (item) {\n            this.setState({item, isFetching: false});\n        }\n    }\n\n\n    render() {\n        const {isFetching, item} = this.state\n        if (isFetching) {\n            return <Loading />\n        }\n\n        return item.name || item.title;\n    }\n}\n\nexport default SubitemView;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SubitemView from './SubitemView';\n\nfunction mapStateToProps({swapiState}, {match: {params: {category, id}}}) {\n    const {results} = swapiState[category]\n    return {\n        item: results && results.find(itm => itm.url.replace(/.*\\/(\\d+)\\/$/, '$1') == id)\n    };\n}\n\nfunction formatIfNeeded(data) {\n    if (/https?:\\/\\//.test(data)) {\n        return <SubitemView path={data} />;\n    }\n\n    return data;\n}\n\nclass ItemView extends Component {\n    render() {\n        const {item} = this.props;\n        if (!item) {\n            return null;\n        }\n        const content = Object.entries(item)\n            .filter(itm => !(/created|edited|url/.test(itm[0])));\n        return (\n            <dl className=\"row\">\n                {content.map(itm => <React.Fragment key={ itm[0] }>\n                    <dt className=\"col-sm-3\">\n                        {itm[0][0].toUpperCase() + itm[0].slice(1).replace('_', ' ')}\n                    </dt>\n                    <dd className=\"col-sm-9\">{Array.isArray(itm[1])\n                        ? itm[1].map(subitm => <div key={subitm}>{formatIfNeeded(subitm)}</div>)\n                        : formatIfNeeded(itm[1])}</dd>\n                </React.Fragment>)}\n            </dl>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n)(ItemView);\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { CATEGORY } from '../../const';\n\nimport Nav from '../components/Nav';\nimport ItemList from '../item-list/ItemList';\nimport ItemView from '../item-view/ItemView';\n\nclass Home extends Component {\n    render() {\n        const categoryReg = CATEGORY.join('|')\n        return (\n            <div className=\"container main-content\">\n                <Nav/>\n                <Switch>\n                    <Route path={`/:category(${categoryReg})`} exact={true}\n                        component={ItemList}/>\n                    <Route path={`/:category(${categoryReg})/:id(\\\\d+)`}\n                        component={ItemView}/>\n                    <Redirect to=\"/films\" />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Home from './containers/home/Home';\n\nconst router = () => {\n    return (\n        <Provider store={store}>\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/\" component={Home} />\n                </Switch>\n            </BrowserRouter>\n        </Provider>\n    );\n};\n\nexport default router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport MainRouter from './router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MainRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}